<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserMapper">

    <!--유저 테이블 전체 칼럼-->
    <sql id="userColumns">
         fb_user_id
        ,fb_user_email
        ,fb_user_pswd
        ,fb_user_nickname
        ,fb_user_name
        ,fb_user_birth
        ,fb_user_phone
        ,fb_user_address
        ,fb_user_auth
        ,fb_user_del_yn
        ,fb_user_reg_date
        ,fb_user_mod_date
        ,fb_user_member_yn
        ,fb_user_specialty
        ,fb_user_main_position
        ,fb_user_img
    </sql>

    <!--유저 회원가입-->
    <insert id="register" parameterType="footBall.domain.user.UserRequest" useGeneratedKeys="true" keyProperty="fbUserId">
        insert into fb_user(
            <include refid="userColumns"/>
        )
        values(
             #{fbUserId}
            ,#{fbUserEmail}
            ,#{fbUserPswd}
            ,#{fbUserNickname}
            ,#{fbUserName}
            ,#{fbUserBirth}
            ,#{fbUserPhone}
            ,#{fbUserAddress}
            ,'N'
            ,'N'
            ,now()
            ,null
            ,'N'
            ,null
            ,null
            ,null
        )
    </insert>

    <!--이메일로 유저 조회-->
    <select id="getUserByEmail" parameterType="String" resultType="footBall.domain.user.UserResponse">
        select
            <include refid="userColumns"/>
        from
            fb_user
        where 1=1
        and fb_user_email = #{email}
        and fb_user_del_yn = 'N'
    </select>

    <!--닉네임으로 유저 조회-->
    <select id="getUserByNickname" parameterType="String" resultType="footBall.domain.user.UserResponse">
        select
            <include refid="userColumns"/>
        from
            fb_user
        where 1=1
        and fb_user_nickname = #{nickname}
        and fb_user_del_yn = 'N'
    </select>

    <!--유저 전체조회-->
    <select id="getAllUser" resultType="footBall.domain.user.UserResponse">
        select
            <include refid="userColumns"/>
        from
            fb_user
        where
            fb_user_del_yn = 'N'
        ORDER BY
            fb_user_birth;
    </select>

    <select id="getSearchUser" resultType="footBall.domain.user.UserResponse">

        select
            <include refid="userColumns"/>
        from
             fb_user
        where
             fb_user_del_yn = 'N'
        and
             FB_USER_NAME like concat('%',#{keyword},'%')
        order by
            fb_user_birth;
    </select>

    <select id="getGest" resultType="footBall.domain.user.UserResponse">
        select
            <include refid="userColumns"/>
        from
            fb_user
        where
            fb_user_del_yn = 'N'
        and
            FB_USER_MEMBER_YN = 'N'
        order by
            fb_user_birth;
    </select>

    <!--유저 멤버만 조회-->
    <select id="getAllMember" resultType="footBall.domain.user.UserResponse">
        SELECT
            <include refid="userColumns"/>
        FROM
            fb_user
        WHERE 1=1
        AND fb_user_member_yn = 'Y'
        AND fb_user_del_yn = 'N'
        ORDER BY
            fb_user_birth;
    </select>

    <!--닉네임 조회-->
    <select id="findNickname" parameterType="int" resultType="string">
        SELECT fb_user_nickname
        FROM fb_user
        WHERE fb_user_id = #{fbUserId}
    </select>

    <!--정보 조회<리스트>-->
    <select id="findOne" parameterType="Integer" resultType="footBall.domain.user.UserResponse">
        SELECT
            <include refid="userColumns"/>
        FROM fb_user
        WHERE fb_user_id = #{fbUserId}
    </select>

    <!--이름과 이메일로 존재여부 판별-->
    <select id="checkByNameAndEmail" parameterType="footBall.domain.user.UserRequest" resultType="Integer">
        SELECT 1 result
        FROM DUAL
        WHERE EXISTS(
            SELECT	1
            FROM 	fb_user
            WHERE 	1=1
            AND     fb_user_email = #{fbUserEmail}
            AND 	fb_user_name = #{fbUserName}
        )
    </select>

    <!--비밀번호 변경(조건: 이메일, 이름)-->
    <update id="modifyPassword" parameterType="footBall.domain.user.UserRequest">
        UPDATE fb_user
        SET fb_user_pswd = #{fbUserPswd}
        WHERE fb_user_name = #{fbUserName} AND fb_user_email = #{fbUserEmail};
    </update>

    <!--멤버 정보 기입 및 수정-->
    <update id="insertMemInfo" parameterType="footBall.domain.user.UserRequest">
        UPDATE fb_user
        SET fb_user_specialty = #{fbUserSpecialty},
            fb_user_main_position = #{fbUserMainPosition}
        WHERE fb_user_id = #{fbUserId};
    </update>

    <!--프로필 사진 업데이트-->
    <update id="saveProfileImg">
        UPDATE fb_user
        SET fb_user_img = #{fbUserImg}
        WHERE fb_user_id = #{fbUserId};
    </update>

    <!--내 정보 업데이트-->
    <update id="updateUserProfile" parameterType="footBall.domain.user.UserRequest">
        UPDATE fb_user
        SET fb_user_pswd = #{fbUserPswd},
            fb_user_nickname = #{fbUserNickname},
            fb_user_name = #{fbUserName},
            fb_user_birth = #{fbUserBirth},
            fb_user_phone = #{fbUserPhone},
            fb_user_address = #{fbUserAddress}
        WHERE fb_user_id = #{fbUserId}
    </update>

</mapper>